// <auto-generated />
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230609204309_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("Core.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BoxHeight")
                        .HasColumnType("INTEGER");

                    b.Property<int>("BoxLenght")
                        .HasColumnType("INTEGER");

                    b.Property<double>("BoxWeight")
                        .HasMaxLength(10)
                        .HasColumnType("REAL");

                    b.Property<int>("BoxWidth")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Dose")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DoseControl")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsMedical")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<string>("Note")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductCompanyId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Speed")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("ProductCompanyId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Core.Entities.ProductCompany", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ProductCompanies");
                });

            modelBuilder.Entity("Core.Entities.Product", b =>
                {
                    b.HasOne("Core.Entities.ProductCompany", "ProductCompany")
                        .WithMany()
                        .HasForeignKey("ProductCompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductCompany");
                });
#pragma warning restore 612, 618
        }
    }
}
